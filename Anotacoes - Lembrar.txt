Receitinha Git

- git config --global user.name "nome_usuario"
- git config --global user.email "email@hotmail.com"
- git config --global --list(confirmar informações de usuário)
- git clone https://github.com/KrishinaSilva/PWIII-KrishinaSilva.git ou https://github.com/KrishinaSilva/PAMII-Krishina-Silva.git
- code .
COMMIT
- git status (verficar a situação atual do repositório para o git reconhecer as pastas antes de fazer o commit)
- git add . (para adicionar tudo que você colocou na sexta) ou git add "Anotacoes - Lembrar.txt" ou git add ../Anotações\ -\ Lembrar.txt (para adicionar um documento específico e ficar pronto pra commitar)
- git commit -m "mensagemdocommit"(commit/comentário)
- git status (ver se está na sexta)
- git push origin main(enviar repositório)

CRIANDO E UTILIZANDO A APLICAÇÃO LARAVEL

- Baixar o e xampp e depois o composer
- ver a versão do xampp e composer(php --version e composer --version)
- instalar composer (composer global require laravel/installer)
- Criando a pasta do projeto caso não tenha no cmd -> (laravel new nome-do-projeto)
- Colar projeto no htdocs da pasta xampp
- Iniciar Apache e MySQL
- Baixar o laravel -> (# Run as administrator...
Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://php.new/install/windows/8.4')))
- Instalar o instalador do laravel no prompt -> (Composer global require laravel/installer)
- Baixar dependências do composer -> (composer install) - super importante senão não roda o php srtisan serve
- Abrir o git, fazer os paranaue e verificar se todas as versões(composer, laravel e php) estão batendo
- Abrir o projeto pelo terminal no htdocs do xampp
- code .
- php artisan serve (iniciar servidor)
- digite na url: localhost:8000
- http://localhost/phpmyadmin/ (MySQL)

*Aula 1 - 21/02/2025* 

- Instalação e Configuração de ambiente somente

*Aula 2 - 24/02/2025* 

(não consegui iniciar o server na sala, então estou anotando nas notas para tentar novamente depois)
(descobri o erro, é novamente a bendita versão do php que é inferior)

- trabalhar com a view
- criar uma view e uma rota
- criar uma migration de cadastro de usuário simples
- só é precido o php artisan serve + extensão vscode
- extensão vscode - SQLite(mostra a documentação-tabelas-do sql)
- (Próxima aula)trazer a situação de rotas de banco de dados pra fazer consulta e instalar um sqa(vull)

*Aula 3 - 10/03/2025*

- Fazer uma tabela de cadastro e uma view do formulário e uma view que mostre as informações de cadastro
*ele quer que separe no GitHub as atividades por pastas - aula01, aula02, aula03-essa aula*

*Aula 4 - 17/03/2025* - Correção atividade formulário, demonstração dos dados e introdução ao Next.js

- Começou criando uma Model de usuários.php
- Cria o controller UsuariosController
   *store armazena já o registro que já ta pronto, o create é o que vai criar do zero*
- html na view
- demonstração da atividade funcionando

*assim termina o laravel, recordação do básico que o alan ensinou*

O next.js é um ecossistema node que usa javascript e é parecido com o laravel, tendo soluções pré-instaladas como o laravel  e um framework react, ele faz coisas rotineiras de API´S como consultas, cadastros, rotas etc. de um framework.

- mechemos no versel